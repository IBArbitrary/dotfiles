################################################################################
# ███████╗██╗  ██╗██╗  ██╗██╗  ██╗██████╗
# ██╔════╝╚██╗██╔╝██║  ██║██║ ██╔╝██╔══██╗
# ███████╗ ╚███╔╝ ███████║█████╔╝ ██║  ██║
# ╚════██║ ██╔██╗ ██╔══██║██╔═██╗ ██║  ██║
# ███████║██╔╝ ██╗██║  ██║██║  ██╗██████╔╝
# ╚══════╝╚═╝  ╚═╝╚═╝  ╚═╝╚═╝  ╚═╝╚═════╝
################################################################################
# o┳━┓┳━┓┳━┓┳━┓o┏┓┓┳━┓┳━┓┳━┓┓ ┳
# ┃┃━┃┃━┫┃┳┛┃━┃┃ ┃ ┃┳┛┃━┫┃┳┛┗┏┛
# ┇┇━┛┛ ┇┇┗┛┇━┛┇ ┇ ┇┗┛┛ ┇┇┗┛ ┇
################################################################################
# wm independent hotkeys (lie)

#-- window manager

#== reload sxkhd config
super + Escape
	pkill -USR1 -x sxhkd

#== {quit,restart} bspwm
super + alt + {q,r}
	bspc {quit,wm -r}

#== {close,close and kill} window
super + {_,shift + }w
	bspc node -{c,k}

#== alternate tiled and monocle
super + m
	bspc desktop -l next

#== send newest marked node to the preselected node
super + y
	bspc node newest.marked.local -n newest.!automatic.local

#== set the window to {tiled,pseudo-tiled,floating,fullscreen} state
super + {t,shift + ctrl + t,s,f}
	bspc node -t {tiled,pseudo_tiled,floating,fullscreen}

#== flag node as {marked,locked,sticky,private,hidden}
super + ctrl + {m,x,s,z,i}
	bspc node -g {marked,locked,sticky,private,hidden}

#== unhide nodes in order
super + ctrl + shift + i
	bspc node $(bspc query -N -n .hidden | tail -n1) -g hidden=off

#== focus the {west,south,north,east} node
super + {h,j,k,l}
	bspc node -f {west,south,north,east}

#== move to the {west,south,north,east} node
super + shift + {h,j,k,l}
	bspc node -s {west,south,north,east}

#== focus the {parent,brother,first,second} node for path jump
super + {p,b,comma,period}
	bspc node -f @{parent,brother,first,second}

#== focus the {next,previous} window in the current desktop
ctrl + alt + {_,shift} + Tab
 	bspc node -f {next,prev}.local.!hidden.window

#== focus the {next,previous} desktop in the current monitor
super + bracket{left,right}
	bspc desktop -f {prev,next}.local

#== focus the {next,previous} desktop in the current monitor
super + ctrl + {Left,Right}
	bspc desktop -f {prev,next}.local

#== focus the {next,previous} desktop in the current monitor
super + button{9,8}
	bspc desktop -f {prev,next}.local

#== focus the last node/desktop
super + Tab
	bspc desktop -f last

#== focus the {older,newer} node in the focus history
super + {o,i}
	bspc wm -h off; bspc node {older,newer} -f; bspc wm -h on

#== focus the given desktop
super + {1-9,0}
	bspc desktop -f '^{1-9,10}'

#== send to the given desktop
super + shift + {1-9,0}
	bspc node -d '^{1-9,10}'

#== send to and focus the given desktop
super + shift + ctrl + {1-9,0}
	bspc {node -d} '^{1-9,10}' -f

#== send to {left,right} desktop
super + shift + {Left,Right}
	bspc node -d {prev,next}

#== send to {left,right} desktop
super + shift + button{9,8}
	bspc node -d {prev,next}

#== send to and focus {left,right} desktop
super + ctrl + shift + {Left,Right}
	bspc node -d {prev,next} -f

#== send to and focus {left,right} desktop
super + ctrl + shift + button{9,8}
	bspc node -d {prev,next} -f

#== preselect the {west,south,north,east} direction
super + ctrl + {h,j,k,l}
	bspc node -p {west,south,north,east}

#== preselect the ratio (0.x)
super + ctrl + {1-9}
	bspc node -o 0.{1-9}

#== cancel the preselection for the focused node
super + ctrl + space
	bspc node -p cancel

#== cancel the preselection for the focused desktop
super + ctrl + shift + space
	bspc query -N -d | xargs -I id -n 1 bspc node id -p cancel

#== expand a window by moving its {west,south,north,east} side outward
super + alt + {h,j,k,l}
	~/bin/bspwm-resize {west,south,north,east}

#== move a floating window {left,down,up,right}
super + {Left,Down,Up,Right}
	bspc node -v {-40 0,0 40,0 -40,40 0}

#== toggle polybar
super + shift + backslash
	~/bin/wm-config-toggles bar

#== toggle window gap
super + shift + bracketright
	~/bin/wm-config-toggles gap

#== toggle window borders
super + shift + bracketleft
	~/bin/wm-config-toggles border

#== redraw window via mouse selection
super + shift + button1
	wmctrl -r :ACTIVE: -e "$(slop -f 0,%x,%y,%w,%h)"

#-- system

#== play/pause media
XF86AudioPlay
	playerctl play-pause

#== play previous media
XF86AudioPrev
	playerctl previous

#== play next media
XF86AudioNext
	playerctl next

#== mute audio
XF86AudioMute
	pactl set-sink-mute @DEFAULT_SINK@ toggle

#== decrease volume
XF86AudioLowerVolume
	pactl set-sink-volume @DEFAULT_SINK@ -10%

#== increase volume
XF86AudioRaiseVolume
	pactl set-sink-volume @DEFAULT_SINK@ +10%

#== decrease backlight brightness
XF86MonBrightnessDown
	light -U 10

#== increase backlight brightness
XF86MonBrightnessUp
	light -A 10

#== change to {prev,next} wallpaper
super + shift + {Prior,Next}
	bgch {prev, next}

#== take screen shot
super + Print
	flameshot full -p ~/pictures/screenshots/ -c

#== show powermenu
ctrl + alt + Delete
	~/.config/rofi/scripts/powermenu_t2

#== show notification history
super + grave
	dunstctl history-pop

#== close all notifications
ctrl + shift + @space
	dunstctl close-all

#== lock screen
super + Delete
	env XSECURELOCK_COMPOSITE_OBSCURER=0 XSECURELOCK_PASSWORD_PROMPT=hidden XSECURELOCK_SHOW_DATETIME=1 XSECURELOCK_SHOW_HOSTNAME=0 XSECURELOCK_SHOW_USERNAME=0  xsecurelock

#== {flameshot gui screenshot,screen snipping}
super + shift + s ; {g,s}
	{flameshot gui,maim -s -u | xclip -selection c -t image/png}

#== show rofi windows selection
alt + Tab
	rofi -show window

#== show sxhkd helper
super + {_,shift} + XF86Calculator
	sxhkd-rofi {_,1}

#-- tools

#== kitty ({tiled,floating} mode)
super + {_,shift} + Return
	{kitty,bspc rule -a \* -o state=floating rectangle=800x400+0+0 center=true && kitty -o font_size=11}

#== dmenu launcher
super + @space
	dmenu_run -F

#== dmenu launcher
shift + XF86Launch2
	dmenu_run -F

#== rofi launcher
XF86Launch2
	~/.config/rofi/scripts/launcher_t3

#== rofi launcher
super + shift + @space
	~/.config/rofi/scripts/launcher_t3

#== firefox
super + shift + b
	firefox

#== firefox (incognito)
super + ctrl + shift + p
	firefox --private-window

#== surf browser
super + ctrl + shift + b
	tabbed surf -e

#== buku bookmarks
super + ctrl + b
	buku-rofi-menu

#== dolphin file manager
super + shift + f
	dolphin

#== pcmanfm file manager (floating)
super + ctrl + f
	bspc rule -a \* -o state=floating rectangle=1000x600+0+0 center=true && pcmanfm

#== zotero papers
super + alt + z
	zotbib-rofi

#== calculator
super + shift + q
	qalculate-gtk

#== launch piemenu
XF86Calculator
	piemenu

#== launch piemenu
ctrl + shift + button2
	piemenu

#== wifi hotspot manager
super + shift + alt + h
	wihotspot

#== {blender,spotify,vs code,virtualbox,texstudio,zotero,inkscape,gimp,discord,libreoffice,krita}
super + shift + o ; {b,s,c,v,t,z,i,g,d,l,k}
	{prime-run blender & disown, spotify-launcher, rofi-code, virtualbox -style Fusion, texstudio, zotero, inkscape, gimp, discord, libreoffice, krita}


#== emacs
super + shift + e
	emacsclient --create-frame --alternate-editor=""

#== emacs (floating)
super + ctrl + e
	bspc rule -a \* -o state=floating center=true && emacsclient --create-frame --alternate-editor=""

#== ncmpcpp (floating)
super + shift + p
	bspc rule -a \* -o state=floating && kitty ncmpcpp

#== mpdmenu
super + shift + alt + p
	mpdmenu -p

#== color picker
super + ctrl + p
	cpicker

#== emoji dmenu ({copy,fill})
super + alt + e ; {c,e}
	{dmenu-unicode, dmenu-unicode arg}

#== pass dmenu
super + alt + p
	passmenu -i -p "password: "

#== clipboard dmenu
super + alt + c
	clipmenu -l 0 -i

#== camera
super + shift + alt + c
	cam

#== books dmenu ({all,categories})
super + alt + {_,shift} + b
	~/bin/alt-book {all,stagger}

#== movies dmenu
super + alt + m
	~/bin/alt-movies

#== shows dmenu ({all,series})
super + alt + {shift,_} + s
	~/bin/alt-series {all,stagger}