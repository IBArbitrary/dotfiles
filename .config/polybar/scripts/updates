#!/usr/bin/env bash

if ! updates_arch=$(checkupdates 2> /dev/null | wc -l ); then
    updates_arch=0
fi

if ! updates_aur=$(yay -Qum 2> /dev/null | wc -l); then
# if ! updates_aur=$(paru -Qum 2> /dev/null | wc -l); then
# if ! updates_aur=$(cower -u 2> /dev/null | wc -l); then
# if ! updates_aur=$(trizen -Su --aur --quiet | wc -l); then
# if ! updates_aur=$(pikaur -Qua 2> /dev/null | wc -l); then
# if ! updates_aur=$(rua upgrade --printonly 2> /dev/null | wc -l); then
    updates_aur=0
fi

nupdates=$(("$updates_arch" + "$updates_aur"))
if [ $updates_arch ];
then
    arch_updates=$(checkupdates) #| grep -Po '^\K([^0-9\.]+)(?=\s\d+.*)')
fi
if [ $updates_aur ];
then
    aur_updates=$(yay -Qu) #| grep -Po '^\K([^0-9\.]+)(?=\s\d+.*)')
fi

case "$1" in
    --show-updates)
        if [ $nupdates != "0" ];
        then
            if [ "$updates_arch" != "0" ];
            then
                notify-send --urgency critical "Pacman" "$arch_updates"
            fi
            if [ "$updates_aur" != "0" ];
            then
                notify-send --urgency critical "Aur" "$aur_updates"
            fi
        else
            notify-send "No updates! (for now)"
        fi
        ;;
    *)
        if [ "$nupdates" -gt 0 ];
        then
            echo "P:$updates_archᵖ %{T2}%{T-} A:$updates_aurᵃ"
        else
            echo "\o/"
        fi
        ;;
esac
